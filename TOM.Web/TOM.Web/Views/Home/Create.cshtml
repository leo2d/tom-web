@model TOM.Core.Entities.Voo

@{
    ViewBag.Title = "Cadastrar voo";
}

<h2>Cadastrar novo voo</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Data do voo</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.DataVoo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataVoo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Origem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Origem, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.Origem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destino, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Destino, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.Destino, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Aeronave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Aeronave, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.Aeronave, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Numero do voo</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroVoo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroVoo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Quantidade de assentos</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.QuantidadeAssentos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuantidadeAssentos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Preço da passagem</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorUnicoPassagem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorUnicoPassagem, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.QuantidadeAssentosLivres, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.QuantidadeAssentosLivres, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuantidadeAssentosLivres, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <p>
        <a href=" @Url.Action("Index", "Home")" class="btn btn-warning">Voltar</a>
    </p>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
